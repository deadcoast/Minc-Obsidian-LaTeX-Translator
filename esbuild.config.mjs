import esbuild from 'esbuild';
import process from 'process';
import path from 'path';

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
If you want to view the source, visit the plugin's github repository
*/
`;

const prod = process.argv[2] === 'production';

const context = await esbuild.context({
  banner: {
    js: banner,
  },
  entryPoints: ['./main.ts'],
  bundle: true,
  external: ['obsidian'],
  format: 'cjs',
  loader: {
    '.ts': 'ts',
    '.tsx': 'tsx',
  },
  target: 'es2020',
  logLevel: 'info',
  sourcemap: prod ? false : 'inline',
  treeShaking: true,
  outfile: 'main.js',
  plugins: [
    {
      name: 'alias-path',
      setup(build) {
        // Handle @/ imports
        build.onResolve({ filter: /^@\// }, args => {
          const filePath = args.path.slice(2); // Remove @/
          const resolvedPath = path.join(process.cwd(), 'src', filePath);
          return { path: resolvedPath };
        });
      }
    }
  ],
  jsx: 'automatic',
  jsxImportSource: 'react',
});

if (prod) {
  await context.rebuild();
  process.exit(0);
} else {
  await context.watch();
}
